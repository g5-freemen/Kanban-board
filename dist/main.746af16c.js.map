{"version":3,"sources":["js/main.js"],"names":["slider","document","getElementById","slides","querySelectorAll","slidesCounters","slidesCards","delBtnInCard","kanbanBoard","querySelector","createCardBtn","modalWindow","closeModalWindowBtn","modalWindowEdit","modalWindowEditContainer","modalWindowConfirm","DelBtnTooltip","postCommentBtn","formNewCard","cardsArray","commentsArray","maxInProgressCards","checkWidthOverflow","place","item","windowWidth","clientWidth","scaleSize","defaultView","getComputedStyle","getPropertyValue","documentElement","style","zoom","width","calcBoardHeight","kanbanBoardHeight","clientHeight","kanbanBoardTitleHeight","kanbanBoardSubtitleHeight","maxColumnHeight","Math","max","boardHeightPx","height","loadCards","cardsName","toPlace","number","localStorage","cardsList","JSON","parse","append","createCard","date","title","desc","id","user","loadComments","commentsList","push","refreshBoard","i","clearColumn","setUserNamePosition","idCard","card","createElement","className","createCardElement","bottomBlock","showCardsCounter","tag","text","name","value","element","deleteCard","cardClassName","nameInLS","array","moveTo","event","target","closest","length","splice","remove","setItem","stringify","showCardCounter","counter","delBtn","innerHTML","visibility","cardsHTML","cardsLS","removeItem","showEditCard","column","display","fadeWindow","getUsers","url","fetch","then","response","json","result","usersList","loadCommentsFromArray","comment","checkWindowOverflow","alignItems","beginOpacity","endOpacity","ms","currentOpacity","opacity","intervalID","setInterval","show","toFixed","clearInterval","cardsInColumn","getElementsByClassName","columnWidth","marginLeft","window","addEventListener","location","reload","left","clientX","top","clientY","cardID","cardColumn","moveCard","nextColumn","alert","preventDefault","Date","dateTime","getDate","getMonth","getFullYear","getMinutes","getHours","cardTitle","cardDesc","cardUser","timerIDgen","cardId","getMilliseconds","reset","editDesc","columnID","updateCard","thing","forEach","readOnly","focus","classList","add","editTitle","setTimeout","slideIndex","sessionStorage","plusSlides","n","showSlides","currentSlide","dots","replace","x0","handleTouchStart","evt","touches","handleTouchEnd","x1","xDiff","abs"],"mappings":"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","file":"main.746af16c.js","sourceRoot":"..\\source","sourcesContent":["'use strict';\r\n\r\nlet slider = document.getElementById('#slider'),\r\n    slides = document.querySelectorAll('div[class^=\"board\"][class$=\"container\"]'),\r\n    slidesCounters = document.querySelectorAll('.board--card_counter'),\r\n    slidesCards = document.querySelectorAll('.board__cards'),\r\n    delBtnInCard = document.querySelectorAll('.board--delBtn'),\r\n    kanbanBoard = document.querySelector('.board'),\r\n    createCardBtn = document.querySelector('.board__add-card-btn'),\r\n    modalWindow = document.querySelector('.modal-window'),\r\n    closeModalWindowBtn = document.querySelector('.card-form--close-btn'),\r\n    modalWindowEdit = document.querySelector('.modal-window--edit'),\r\n    modalWindowEditContainer = modalWindowEdit.querySelector('.modal-window--container'),\r\n    modalWindowConfirm = document.querySelector('.modal-window--confirm'),\r\n    DelBtnTooltip = document.querySelector('.board--delBtn-tooltip'),\r\n    postCommentBtn = document.querySelector('.card--post-comment'),\r\n    formNewCard = document.querySelector('.card-form'),\r\n    cardsArray = [ [], [], [] ],\r\n    commentsArray = [],\r\n    maxInProgressCards = 5;\r\n\r\n//#region Functions\r\n\r\nfunction checkWidthOverflow(place) { // check window width overflow\r\n    let item = document.querySelector(place),\r\n        windowWidth = item.clientWidth,\r\n        scaleSize = +document.defaultView.getComputedStyle(item).getPropertyValue(\"zoom\");\r\n    while (document.documentElement.clientWidth * 0.98 < windowWidth) {\r\n        windowWidth-=2;\r\n        scaleSize-=0.006;\r\n    }\r\n    item.style.zoom = scaleSize;\r\n    item.style.width = windowWidth + 'px';\r\n} // end of checkWidthOverflow()\r\n\r\nfunction calcBoardHeight() { //calculate and set height of board (depends of content)\r\n    let kanbanBoardHeight = document.documentElement.clientHeight,\r\n        kanbanBoardTitleHeight = document.querySelector('.header__title').clientHeight,\r\n        kanbanBoardSubtitleHeight = document.querySelector('.header__subtitle').clientHeight,\r\n        maxColumnHeight = Math.max(slides[0].clientHeight, slides[1].clientHeight, slides[2].clientHeight),\r\n        boardHeightPx = kanbanBoardHeight*0.88 - (kanbanBoardTitleHeight + kanbanBoardSubtitleHeight) ;\r\n\r\n    if ( boardHeightPx < maxColumnHeight ) {\r\n        kanbanBoard.style.height = maxColumnHeight + 'px';\r\n    } else {\r\n        kanbanBoard.style.height = boardHeightPx + 'px';\r\n    };\r\n};\r\n\r\nfunction loadCards(cardsName, toPlace, number) { // Load cards from localStorage\r\n    if (localStorage[cardsName]) {\r\n        let cardsList = JSON.parse( localStorage[cardsName] );\r\n        for (let item of cardsList) {\r\n            toPlace.append( createCard(item.date, item.title, item.desc, item.id, item.user, number) );\r\n    } };\r\n    calcBoardHeight();\r\n};\r\n\r\nfunction loadComments() { // Load comments from localStorage\r\n    if (localStorage['comments']) {\r\n        let commentsList = JSON.parse( localStorage['comments'] );\r\n        for (let item of commentsList) {\r\n            commentsArray.push( item ); // add comments to commentsArray\r\n    } };\r\n}\r\n\r\nfunction refreshBoard() {\r\n    for (let i = 0 ; i < 3 ; i++ )\r\n        {\r\n            clearColumn(cardsArray[i], slidesCards[i], '');\r\n            loadCards(`cardsArray[${i}]`, slidesCards[i], i+1);\r\n            setUserNamePosition(slidesCards[i]);\r\n        }\r\n};\r\n\r\nfunction createCard(date, title, desc, idCard, user, number) {\r\n    let card = document.createElement('li');\r\n    card.className = \"card\";\r\n    card.id = +idCard;\r\n    card.append(createCardElement('span', title, 'title'));\r\n    card.append(createCardElement('div', desc, 'desc'));\r\n    card.append(createCardElement('span', user, 'user'));\r\n    let bottomBlock = document.createElement('div');\r\n    bottomBlock.className = \"card--bottom\";\r\n    bottomBlock.append(createCardElement('span', date, 'date'));\r\n    bottomBlock.append(createCardElement('button', '', 'delete-btn'));\r\n    bottomBlock.append(createCardElement('button', '', 'move-btn'));\r\n    card.append(bottomBlock);\r\n    cardsArray[number-1].push( {title, desc, date, id:(+card.id), user} );\r\n    showCardsCounter();\r\n    return card;\r\n};\r\n\r\nfunction createCardElement(tag, text, name, value) {\r\n    let element = document.createElement(tag);\r\n    if (name) element.className = 'card--' + name;\r\n    if (text) element.append(text);\r\n    if (value) element.value = value;\r\n    return element;\r\n};\r\n\r\nfunction deleteCard(cardClassName, nameInLS, array, moveTo) { // delete or move (if 4th value = true)\r\n    let card = event.target.closest(cardClassName);\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (array[i].id === +card.id) {\r\n            if (moveTo) {moveTo.push( array[i] )}; //if moveTo exists -> move card to another array\r\n            array.splice(i, 1); // delete card from cards array\r\n        }\r\n    }\r\n    card.remove(); // delete card from HTML\r\n    localStorage.setItem(nameInLS, JSON.stringify(array));\r\n    showCardsCounter();\r\n};\r\n\r\nfunction showCardCounter(array, counter, delBtn) { //show single column cards counter\r\n    if (array.length) {\r\n        counter.innerHTML = array.length;\r\n        counter.style.visibility = 'visible';\r\n        delBtn.style.visibility = 'visible';\r\n    } else {\r\n        delBtn.style.visibility = 'hidden';\r\n        counter.style.visibility = 'hidden';\r\n    }\r\n};\r\n\r\nfunction showCardsCounter() { // show all counters of cards\r\n    for (let i = 0; i < 3; i++) {\r\n        showCardCounter(cardsArray[i], slidesCounters[i], delBtnInCard[i]);\r\n    }\r\n};\r\n\r\nfunction clearColumn(array, cardsHTML, cardsLS) { // clear column\r\n    if (array) array.length = 0;\r\n    if (cardsHTML) cardsHTML.innerHTML = '';\r\n    if (cardsLS) localStorage.removeItem(cardsLS);\r\n    showCardsCounter();\r\n};\r\n\r\nfunction showEditCard(id,title,desc,date, column, user) { // show modal window to edit card\r\n    modalWindowEdit.style.visibility = 'visible';\r\n    slider.style.display = 'none' ;\r\n    modalWindowEdit.querySelector('.card--edit-title').value = title;\r\n    modalWindowEdit.querySelector('.card--edit-title').id = column;\r\n    modalWindowEdit.querySelector('.card--edit-desc').innerHTML = desc;\r\n    modalWindowEdit.querySelector('.card--edit-date').innerHTML = date;\r\n    modalWindowEdit.querySelector('.card--edit-date').id = id;\r\n    modalWindowEdit.querySelector('.card--edit-user').innerHTML = user;\r\n    if (column == 'cardsArray[1]' || column == 'cardsArray[2]') { // no add comments btn in this columns\r\n        document.querySelector('.card__add-comment--button').style.display = 'none';\r\n        document.querySelector('.card--edit-img.edit-title').style.display = 'none';\r\n        document.querySelector('.card--edit-img.edit-desc').style.display = 'none';\r\n    } else {\r\n        document.querySelector('.card__add-comment--button').style.display = 'flex';\r\n        document.querySelector('.card--edit-img.edit-title').style.display = 'flex';\r\n        document.querySelector('.card--edit-img.edit-desc').style.display = 'flex';\r\n    }\r\n    fadeWindow(modalWindowEditContainer, 0, 1, 1);\r\n};\r\n\r\nlet getUsers = (url) => fetch(`${url}`)     // load users list from URL\r\n.then(response => response.json())\r\n.then(result => {\r\n    for(let item of result) {\r\n        usersList.append( createCardElement('option', item.name, '', item.name ));\r\n    }\r\n} );\r\n\r\nfunction loadCommentsFromArray(id) { // add comments from array to editCard\r\n    for (let i = 0; i < commentsArray.length; i++) {\r\n        if(commentsArray[i].id === id) {\r\n            document.querySelector('.card--comments').append(createCardElement('span', commentsArray[i].user, 'author'));\r\n            document.querySelector('.card--comments').append(createCardElement('span', commentsArray[i].comment, 'comment'));\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkWindowOverflow() { // if editCard window's height too big -> change window position\r\n    if (modalWindowEditContainer.clientHeight > 0.55 * document.documentElement.clientHeight) {\r\n        modalWindowEdit.style.alignItems = 'flex-start'\r\n    } else {modalWindowEdit.style.alignItems = 'center'}\r\n    if (formNewCard.clientHeight > 0.55 * document.documentElement.clientHeight) {\r\n        modalWindow.style.alignItems = 'flex-start'\r\n    } else {modalWindow.style.alignItems = 'center'}\r\n}\r\n\r\nfunction fadeWindow(place, beginOpacity, endOpacity, ms) {\r\n    let currentOpacity = +beginOpacity;\r\n    place.style.opacity = +beginOpacity; \r\n    \r\n    let intervalID = setInterval( function() {show(place, beginOpacity, endOpacity)}, ms);\r\n\r\n    function show(place, beginOpacity, endOpacity) { \r\n        currentOpacity = +document.defaultView.getComputedStyle(place).getPropertyValue(\"opacity\"); \r\n        if ( currentOpacity.toFixed(2) != +endOpacity.toFixed(2) ) { \r\n            if ( beginOpacity < endOpacity ) { currentOpacity += 0.01; }\r\n            else { currentOpacity -= 0.01 }\r\n            place.style.opacity = currentOpacity;\r\n        } \r\n        else { clearInterval(intervalID) } \r\n    } \r\n};\r\n\r\nfunction setUserNamePosition(column) { // set left margin of every userName in every card\r\n    let cardsInColumn = column.getElementsByClassName('card--user'),\r\n        columnWidth = column.querySelector('.card--title');\r\n    for (let element of cardsInColumn) {\r\n        element.style.marginLeft = (columnWidth.clientWidth - element.clientWidth)-10 + 'px';\r\n    }\r\n};\r\n\r\n//#endregion\r\n//#region Listeners & etc.\r\n\r\ngetUsers('https://jsonplaceholder.typicode.com/users');\r\nrefreshBoard();\r\nloadComments();\r\n\r\nwindow.addEventListener('resize', () => {   // refresh board on resize\r\n    if ( document.defaultView.getComputedStyle(modalWindowEditContainer).getPropertyValue(\"visibility\") == 'hidden'\r\n    && document.defaultView.getComputedStyle(formNewCard).getPropertyValue(\"visibility\") == 'hidden' ) {\r\n        location.reload();\r\n    }\r\n} );\r\n\r\nkanbanBoard.addEventListener('mouseover', event => { // show tooltip if mouseover X button\r\n    if(event.target.className === 'board--delBtn' ) {\r\n    DelBtnTooltip.style.left = event.clientX - DelBtnTooltip.clientWidth +'px';\r\n    DelBtnTooltip.style.top = event.clientY +'px';\r\n    DelBtnTooltip.style.visibility = 'visible';\r\n    }\r\n} );\r\n\r\nkanbanBoard.addEventListener('mouseout', () => { // hide tooltip if mouseout of X button\r\n    DelBtnTooltip.style.visibility = 'hidden';\r\n} );\r\n\r\nkanbanBoard.addEventListener('click', event => {    // clicks inside of board\r\n    if( event.target.className === 'card--title' || event.target.className === 'card--desc' // edit card\r\n        || event.target.className === 'card--bottom' || event.target.className === 'card--date') {\r\n        let card = event.target.closest('.card'),\r\n            cardID = +card.id,\r\n            column,\r\n            cardColumn = card.closest('div').className;\r\n        if (cardColumn == 'board__to-do--container') column='cardsArray[0]';\r\n        if (cardColumn == 'board__in-progress--container') column='cardsArray[1]';\r\n        if (cardColumn == 'board__done--container') column='cardsArray[2]';\r\n        let cardTitle = card.querySelector('.card--title').innerHTML;\r\n        let cardDesc = card.querySelector('.card--desc').innerHTML;\r\n        let cardDate = card.querySelector('.card--date').innerHTML;\r\n        let user = card.querySelector('.card--user').innerHTML;\r\n        showEditCard(cardID, cardTitle, cardDesc, cardDate, column, user);\r\n        loadCommentsFromArray(cardID);\r\n        checkWindowOverflow();\r\n        checkWidthOverflow('.modal-window--container');\r\n    };\r\n\r\n    if (event.target.className === 'board--delBtn') { // Clear Column btn\r\n        if (event.target.closest('.board__to-do--container')) {\r\n            clearColumn(cardsArray[0], slidesCards[0], 'cardsArray[0]'); // clear array, html, localstorage\r\n        } else if (event.target.closest('.board__in-progress--container')) {\r\n            modalWindowConfirm.style.visibility = 'visible'; // call confirmWindow to clear column\r\n        } else if (event.target.closest('.board__done--container')) {\r\n            clearColumn(cardsArray[2], slidesCards[2], 'cardsArray[2]'); // clear array, html, localstorage\r\n        }\r\n    };\r\n\r\n    if(event.target.className === 'card--delete-btn' ) { // Delete card btn (inside card)\r\n        if(event.target.closest('.board__to-do--container')) {\r\n            deleteCard('.card', 'cardsArray[0]', cardsArray[0]);\r\n        }\r\n        else if(event.target.closest('.board__in-progress--container')) {\r\n            deleteCard('.card', 'cardsArray[1]', cardsArray[1]);\r\n        }\r\n        else if(event.target.closest('.board__done--container')) {\r\n            deleteCard('.card', 'cardsArray[2]', cardsArray[2]);\r\n        };\r\n    };\r\n\r\n    function moveCard(column) {\r\n        let nextColumn,\r\n            card = event.target.closest('.card');\r\n        column == 2 ? nextColumn = 0 : nextColumn = column+1 ;\r\n        deleteCard(`.card`, `cardsArray[${column}]`, cardsArray[column], cardsArray[nextColumn]); // move\r\n        slidesCards[nextColumn].append ( card );\r\n        localStorage.setItem(`cardsArray[${nextColumn}]`, JSON.stringify(cardsArray[nextColumn]));\r\n    }\r\n\r\n    if(event.target.className === 'card--move-btn' ) { // Move btn (inside card)\r\n        if(event.target.closest('.board__to-do--container')) {\r\n            if (cardsArray[1].length >= maxInProgressCards) {\r\n            alert(`You can't have more than ${maxInProgressCards} tasks in 'In Progress' column.\\nPlease delete one or more tasks.`)\r\n            } else {\r\n                moveCard(0);\r\n            }\r\n        } else if(event.target.closest('.board__in-progress--container')) {\r\n            moveCard(1);\r\n        } else if(event.target.closest('.board__done--container')) {\r\n            moveCard(2);\r\n        };\r\n    };\r\n    calcBoardHeight();\r\n    refreshBoard();\r\n} ) // end of kanbanBoard.addEventListener\r\n\r\ncreateCardBtn.addEventListener('click',  () => { // click on 'Add card' calls modal window with card form\r\n    modalWindow.style.visibility = \"visible\";\r\n    slider.style.display = 'none' ;\r\n    checkWidthOverflow('.card-form');\r\n    checkWindowOverflow();\r\n    fadeWindow(formNewCard, 0, 1, 1);\r\n} );\r\n\r\nmodalWindow.addEventListener('submit', event => {   // form submit Btn (create new card & close window)\r\n    event.preventDefault();\r\n    let date = new Date();\r\n    let dateTime = date.getDate() +\"/\"+ (+date.getMonth()+1) +\"/\"+ date.getFullYear();\r\n    if (+date.getMinutes() < 10 ) {dateTime += \" - \"+ date.getHours() +':0'+date.getMinutes()}\r\n    else {dateTime += \" - \"+ date.getHours() +':'+date.getMinutes()};\r\n    let cardTitle = formNewCard.querySelector('.card-form--title').value;\r\n    let cardDesc = formNewCard.querySelector('.card-form--desc').value;\r\n    let cardUser = formNewCard.querySelector('#usersList').value;\r\n    let timerIDgen = new Date();\r\n    let cardId = timerIDgen.getMinutes() * timerIDgen.getMilliseconds();\r\n    slidesCards[0].append ( createCard(dateTime, cardTitle, cardDesc, cardId, cardUser, 1) );\r\n    localStorage.setItem('cardsArray[0]', JSON.stringify(cardsArray[0]));\r\n    location.reload();\r\n} );\r\n\r\ncloseModalWindowBtn.addEventListener('click', () => {\r\n    formNewCard.reset();\r\n    location.reload();\r\n}); // close modal window if click closeBtn\r\n\r\nmodalWindowEdit.addEventListener('click', event => {    \r\n    if (!event.target.closest('.modal-window--container') || // close cardEdit modal window if click outside it\r\n        event.target.className === 'card-form--close-btn') { // close cardEdit modal window if click closeBtn\r\n        location.reload();\r\n    } else { // else click inside cardEdit\r\n    let editDesc = 'card--edit-img edit-desc',\r\n        editTitle = 'card--edit-img edit-title',\r\n        columnID = document.querySelector('.card--edit-title').id;\r\n\r\n    function updateCard(column,array,thing) {\r\n        if (columnID==column) {\r\n            array.forEach(item => {\r\n                if (item.id === +modalWindowEdit.querySelector('.card--edit-date').id) {\r\n                    item[thing] = modalWindowEdit.querySelector('.card--edit-'+thing).value;\r\n                    localStorage.setItem(columnID, JSON.stringify(array));\r\n                } } )\r\n        }\r\n    };\r\n\r\n    if (event.target.className === editDesc) { // if press editBtn (near description) => edit description\r\n        modalWindowEdit.querySelector('.card--edit-desc').readOnly = false ;\r\n        modalWindowEdit.querySelector('.card--edit-desc').focus();\r\n        modalWindowEdit.querySelector('.card--edit-img.edit-desc').classList.add('saveImg');\r\n    }\r\n    else if (event.target.className === editTitle) { // if press editBtn (near title) => edit title\r\n        modalWindowEdit.querySelector('.card--edit-title').readOnly = false ;\r\n        modalWindowEdit.querySelector('.card--edit-title').focus();\r\n        modalWindowEdit.querySelector('.card--edit-img.edit-title').classList.add('saveImg');\r\n    }\r\n    else if (event.target.className === editTitle+' saveImg' &&\r\n    modalWindowEdit.querySelector('.card--edit-title').value) { //save new title (press saveBtn)\r\n        modalWindowEdit.querySelector('.card--edit-title').readOnly = true ;\r\n        modalWindowEdit.querySelector('.card--edit-img.edit-title').classList.remove('saveImg');\r\n        updateCard('cardsArray[0]',cardsArray[0], 'title');\r\n        updateCard('cardsArray[1]',cardsArray[1], 'title');\r\n        updateCard('cardsArray[2]',cardsArray[2], 'title');\r\n        refreshBoard();\r\n    }\r\n    else if (event.target.className === editDesc+' saveImg' &&\r\n    modalWindowEdit.querySelector('.card--edit-desc').value) { //save new description (press saveBtn)\r\n        modalWindowEdit.querySelector('.card--edit-desc').readOnly = true ;\r\n        modalWindowEdit.querySelector('.card--edit-img.edit-desc').classList.remove('saveImg');\r\n        updateCard('cardsArray[0]',cardsArray[0], 'desc')\r\n        updateCard('cardsArray[1]',cardsArray[1], 'desc');\r\n        updateCard('cardsArray[2]',cardsArray[2], 'desc');\r\n        refreshBoard();\r\n    } else if (event.target.className === 'card__add-comment--button') { // press Add Comment btn\r\n        modalWindowEdit.querySelector('.card__add-comment--button').style.display = 'none';\r\n        modalWindowEdit.querySelector('.card__add-comment').style.display = 'flex';\r\n        modalWindowEdit.querySelector('.card--comment-usersList').append (usersList) ;\r\n    } else if (event.target.className === 'card--post-comment') { // press POST comment btn\r\n        if (modalWindowEdit.querySelector('#usersList').value &&\r\n         modalWindowEdit.querySelector('.card--input-comment').value) {\r\n            let comment = modalWindowEdit.querySelector('.card--input-comment').value,\r\n                user = modalWindowEdit.querySelector('#usersList').value,\r\n                id = +modalWindowEdit.querySelector('.card--edit-date').id;\r\n                commentsArray.push({id, user, comment});\r\n                localStorage.setItem('comments', JSON.stringify(commentsArray));\r\n                modalWindowEdit.querySelector('.card__add-comment--button').style.display = 'flex';\r\n                modalWindowEdit.querySelector('.card__add-comment').style.display = 'none';\r\n                modalWindowEdit.querySelector('#usersList').value = '';\r\n                modalWindowEdit.querySelector('.card--input-comment').value = '';\r\n                document.querySelector('.card--comments').innerHTML = '';\r\n                loadCommentsFromArray(id);\r\n                checkWindowOverflow();\r\n        } else if (!modalWindowEdit.querySelector('#usersList').value) { // tooltip if user not selected\r\n            modalWindowEdit.querySelector('.card--noUser-tooltip').style.display = 'flex';\r\n            setTimeout(() => {\r\n                modalWindowEdit.querySelector('.card--noUser-tooltip').style.display = 'none';\r\n            }, 3000);\r\n        } else { // tooltip if empty comment\r\n            modalWindowEdit.querySelector('.card--empty-comment-tooltip').style.display = 'flex';\r\n            setTimeout(() => {\r\n                modalWindowEdit.querySelector('.card--empty-comment-tooltip').style.display = 'none';\r\n            }, 3000);\r\n        }\r\n    }\r\n}} );\r\n\r\nmodalWindowConfirm.addEventListener('click', event => {\r\n    if (event.target.id === 'deleteInProgressCards') {\r\n        clearColumn(cardsArray[1], slidesCards[1], 'cardsArray[1]'); //clear array, html, localstorage\r\n        location.reload();\r\n    } else if (event.target.id === 'notDeleteInProgressCards') {\r\n        location.reload();\r\n    }\r\n})\r\n\r\n//#endregion\r\n//#region Slider \r\n\r\nlet slideIndex = +sessionStorage['currentSlide'] || 1; // load last slide number from sessionStorage\r\n\r\nif ( document.defaultView.getComputedStyle(slides[0]).getPropertyValue(\"display\") == \"none\" ||\r\n    document.defaultView.getComputedStyle(slides[1]).getPropertyValue(\"display\") == \"none\" ||\r\n    document.defaultView.getComputedStyle(slides[2]).getPropertyValue(\"display\") == \"none\"\r\n) { showSlides(slideIndex) \r\n} else { slider.style.display = 'none'}\r\n\r\nfunction plusSlides(n) { // change slide number\r\n  showSlides(slideIndex += n);\r\n  sessionStorage.setItem('currentSlide', slideIndex); // save current slide number to sessionStorage\r\n}\r\n\r\nfunction currentSlide(n) {\r\n  showSlides(slideIndex = n);\r\n  sessionStorage.setItem('currentSlide', slideIndex);  // save current slide number to sessionStorage\r\n}\r\n\r\nfunction showSlides(n) {\r\n    let dots = document.getElementsByClassName(\"dot\");\r\n    if (n > 3) {slideIndex = 1}; // if try to slide right from slide 3 it returns 1st slide\r\n    if (n < 1) {slideIndex = 3}; // if try to slide left from slide 1 it returns 3rd slide\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n        if (i === slideIndex-1) { \r\n            slides[i].style.display = 'flex';\r\n            dots[i].className += \" active\"; // make slider dot -> active\r\n        } else { \r\n            slides[i].style.display = 'none';\r\n            dots[i].className = dots[i].className.replace(\" active\", \"\");  // make slider dot -> non-active\r\n        } \r\n    }\r\n    setUserNamePosition( slides[slideIndex-1] );\r\n    calcBoardHeight();\r\n}\r\n\r\n// Slider Swipe\r\n\r\nlet x0 = null;\r\n\r\nfunction handleTouchStart(evt) {\r\n    x0 = +evt.touches[0].clientX.toFixed();\r\n}\r\n\r\nfunction handleTouchEnd(evt) {\r\n    let x1 = +evt.touches[0].clientX.toFixed(),\r\n        xDiff = Math.abs(x0 - x1);\r\n    if ( (x0 || x0 === 0) && xDiff > +kanbanBoard.clientWidth * 0.05 ) {\r\n        if (x1 > x0) { plusSlides(-1) } \r\n        else { plusSlides(1) }\r\n    x0 = null;\r\n    }\r\n}\r\n\r\ndocument.addEventListener('touchstart', handleTouchStart );\r\ndocument.addEventListener('touchmove', handleTouchEnd );\r\n\r\n//#endregion"]}